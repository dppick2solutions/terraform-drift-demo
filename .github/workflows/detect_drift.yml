name: "Detect Drift in Infrastructure"

on:
    schedule:
      - cron: "0 12 * * *"
    workflow_dispatch: 

permissions: write-all

jobs:
    terraform-drift-check:
        name: "Terraform Drift Detection"
        runs-on: ubuntu-latest
        environment: main
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.9.4

            - name: Azure Login
              uses: Azure/login@v1.5.0
              with: 
                client-id: ${{ vars.ARM_CLIENT_ID }}
                tenant-id: ${{ vars.ARM_TENANT_ID }}
                subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

            - name: Terraform Init
              env:
                ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
                ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
              run: terraform init -backend-config="backend.conf"

            - name: Terraform Plan
              env:
                ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
                ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
                TF_VAR_azure_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
                TF_VAR_azure_client_id: ${{ vars.ARM_CLIENT_ID }}
              run: terraform plan -detailed-exitcode

            - name: Notify Google Chat of Failure
              uses: google-github-actions/send-google-chat-webhook@v0.0.2
              if: steps.plan.outputs.exitcode == 2
              with:
                webhook_url: ${{ secrets.GCHAT_WEBHOOK_URL }}
                mention: <users/devante@pick2solutions.com>

            - name: Approve Terraform Plan
              uses: trstringer/manual-approval@v1
              if: steps.plan.outputs.exitcode == 2
              with:
                secret: ${{ github.token }}
                approvers: dppick2solutions

            - name: Terraform Apply
              if: steps.plan.outputs.exitcode == 2
              env:
                ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
                ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
                TF_VAR_azure_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
                TF_VAR_azure_client_id: ${{ vars.ARM_CLIENT_ID }}
              run: terraform apply -auto-approve

